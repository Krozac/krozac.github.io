{"version":3,"file":"static/js/879.3ee9858c.chunk.js","mappings":"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","sources":["simulations/boids/boid.js","simulations/boids/index.js","simulations/boids/simulation.js"],"sourcesContent":["// Global parameters for boid behaviors\r\nexport const boidParams = {\r\n    separationFactor: 0.05,\r\n    alignmentFactor: 0.05,\r\n    centeringFactor: 0.0005,\r\n};\r\n// src/Boid.ts\r\nexport class Boid {\r\n    constructor(x, y) {\r\n        this.position = { x, y };\r\n        this.velocity = { x: Math.random() * 2 - 1, y: Math.random() * 2 - 1 };\r\n        this.acceleration = { x: 0, y: 0 };\r\n        this.trail = [];\r\n        this.maxTrailLength = 50; // Longueur maximale du tracé\r\n        this.turnfactor = 0.2;\r\n        this.visualRange = 40;\r\n        this.protectedRange = 8;\r\n        this.maxspeed = 6;\r\n        this.minspeed = 3;\r\n    }\r\n    update(canvasWidth, canvasHeight) {\r\n        this.velocity.x += this.acceleration.x;\r\n        this.velocity.y += this.acceleration.y;\r\n        const speed = Math.sqrt(Math.pow(this.velocity.x, 2) + Math.pow(this.velocity.y, 2));\r\n        if (speed > this.maxspeed) {\r\n            this.velocity.x = (this.velocity.x / speed) * this.maxspeed;\r\n            this.velocity.y = (this.velocity.y / speed) * this.maxspeed;\r\n        }\r\n        if (speed < this.minspeed) {\r\n            this.velocity.x = (this.velocity.x / speed) * this.minspeed;\r\n            this.velocity.y = (this.velocity.y / speed) * this.minspeed;\r\n        }\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n        if (this.position.x < 50)\r\n            this.velocity.x += this.turnfactor;\r\n        if (this.position.x > canvasWidth - 50)\r\n            this.velocity.x -= this.turnfactor;\r\n        if (this.position.y < 50)\r\n            this.velocity.y += this.turnfactor;\r\n        if (this.position.y > canvasHeight - 50)\r\n            this.velocity.y -= this.turnfactor;\r\n        this.acceleration.x = 0;\r\n        this.acceleration.y = 0;\r\n        // Mise à jour de la trajectoire\r\n        this.trail.push({ x: this.position.x, y: this.position.y });\r\n        if (this.trail.length > this.maxTrailLength) {\r\n            this.trail.shift(); // Supprimer les anciennes positions\r\n        }\r\n    }\r\n    applyForce(force) {\r\n        this.acceleration.x += force.x;\r\n        this.acceleration.y += force.y;\r\n    }\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.position.x, this.position.y, 5, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n    flock(boids) {\r\n        this.alignment(boids);\r\n        this.cohesion(boids);\r\n        this.separation(boids);\r\n    }\r\n    separation(boids) {\r\n        let close = { dx: 0, dy: 0 };\r\n        for (const other of boids) {\r\n            const distance = Math.sqrt(Math.pow((this.position.x - other.position.x), 2) + Math.pow((this.position.y - other.position.y), 2));\r\n            if (distance < this.protectedRange && distance > 0) {\r\n                close.dx += this.position.x - other.position.x;\r\n                close.dy += this.position.y - other.position.y;\r\n            }\r\n        }\r\n        this.velocity.x += close.dx * boidParams.separationFactor;\r\n        this.velocity.y += close.dy * boidParams.separationFactor;\r\n    }\r\n    alignment(boids) {\r\n        let xvel_avg = 0;\r\n        let yvel_avg = 0;\r\n        let neighboring_boids = 0;\r\n        for (const other of boids) {\r\n            const distance = Math.sqrt(Math.pow((this.position.x - other.position.x), 2) + Math.pow((this.position.y - other.position.y), 2));\r\n            if (distance < this.visualRange && distance > 0) {\r\n                xvel_avg += other.velocity.x;\r\n                yvel_avg += other.velocity.y;\r\n                neighboring_boids++;\r\n            }\r\n        }\r\n        if (neighboring_boids > 0) {\r\n            xvel_avg /= neighboring_boids;\r\n            yvel_avg /= neighboring_boids;\r\n        }\r\n        this.velocity.x += (xvel_avg - this.velocity.x) * boidParams.alignmentFactor;\r\n        this.velocity.y += (yvel_avg - this.velocity.y) * boidParams.alignmentFactor;\r\n    }\r\n    cohesion(boids) {\r\n        let xpos_avg = 0;\r\n        let ypos_avg = 0;\r\n        let neighboring_boids = 0;\r\n        for (const other of boids) {\r\n            const distance = Math.sqrt(Math.pow((this.position.x - other.position.x), 2) + Math.pow((this.position.y - other.position.y), 2));\r\n            if (distance < this.visualRange && distance > 0) {\r\n                xpos_avg += other.position.x;\r\n                ypos_avg += other.position.y;\r\n                neighboring_boids++;\r\n            }\r\n        }\r\n        if (neighboring_boids > 0) {\r\n            xpos_avg /= neighboring_boids;\r\n            ypos_avg /= neighboring_boids;\r\n        }\r\n        this.velocity.x += (xpos_avg - this.position.x) * boidParams.centeringFactor;\r\n        this.velocity.y += (ypos_avg - this.position.y) * boidParams.centeringFactor;\r\n    }\r\n}\r\n","import { startSimulation, addTracingToggle } from './simulation.js';\r\nimport { boidParams } from './boid.js';\r\nconst canvas = document.createElement('canvas');\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\ndocument.body.appendChild(canvas);\r\nconst ctx = canvas.getContext('2d');\r\nif (ctx) {\r\n    startSimulation(ctx);\r\n    addTracingToggle(); // Ajouter le bouton de contrôle\r\n}\r\nelse {\r\n    console.error('Failed to get canvas context.');\r\n}\r\nconst controlsContainer = document.createElement('div');\r\ncontrolsContainer.style.position = 'absolute';\r\ncontrolsContainer.style.top = '10px';\r\ncontrolsContainer.style.left = '10px';\r\ncontrolsContainer.style.backgroundColor = 'white';\r\ncontrolsContainer.style.padding = '10px';\r\ncontrolsContainer.style.border = '1px solid black';\r\ncontrolsContainer.style.zIndex = '10';\r\nfunction createSlider(label, min, max, step, value, onChange) {\r\n    const container = document.createElement('div');\r\n    const sliderLabel = document.createElement('label');\r\n    const slider = document.createElement('input');\r\n    const valueDisplay = document.createElement('span');\r\n    sliderLabel.textContent = label;\r\n    slider.type = 'range';\r\n    slider.min = String(min);\r\n    slider.max = String(max);\r\n    slider.step = String(step);\r\n    slider.value = String(value);\r\n    valueDisplay.textContent = `: ${value}`;\r\n    slider.addEventListener('input', () => {\r\n        valueDisplay.textContent = `: ${slider.value}`;\r\n        onChange(Number(slider.value));\r\n    });\r\n    container.appendChild(sliderLabel);\r\n    container.appendChild(slider);\r\n    container.appendChild(valueDisplay);\r\n    return container;\r\n}\r\n\r\ncontrolsContainer.appendChild(createSlider('Separation', 0, 0.1, 0.001, boidParams.separationFactor, (val) => (boidParams.separationFactor = val)));\r\ncontrolsContainer.appendChild(createSlider('Alignment', 0, 0.1, 0.001, boidParams.alignmentFactor, (val) => (boidParams.alignmentFactor = val)));\r\ncontrolsContainer.appendChild(createSlider('Centering', 0, 0.001, 0.00001, boidParams.centeringFactor, (val) => (boidParams.centeringFactor = val)));\r\ndocument.body.appendChild(controlsContainer);\r\n","import { Boid } from './boid.js';\r\nlet tracingEnabled = false; // Activer ou désactiver le traçage\r\nexport function startSimulation(ctx) {\r\n    const canvas = ctx.canvas;\r\n    const boids = [];\r\n    for (let i = 0; i < 500; i++) {\r\n        boids.push(new Boid(Math.random() * canvas.width, Math.random() * canvas.height));\r\n    }\r\n    function drawTrail(boid) {\r\n        if (!tracingEnabled)\r\n            return;\r\n        ctx.beginPath();\r\n        for (let i = 0; i < boid.trail.length - 1; i++) {\r\n            const start = boid.trail[i];\r\n            const end = boid.trail[i + 1];\r\n            ctx.moveTo(start.x, start.y);\r\n            ctx.lineTo(end.x, end.y);\r\n        }\r\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.2)';\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n    function drawBoid(boid) {\r\n        const size = 10;\r\n        const angle = Math.atan2(boid.velocity.y, boid.velocity.x);\r\n        ctx.save();\r\n        ctx.translate(boid.position.x, boid.position.y);\r\n        ctx.rotate(angle);\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, -size / 2);\r\n        ctx.lineTo(-size / 2, size / 2);\r\n        ctx.lineTo(size, size / 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = 'rgba(255,255,255, 0.5)';\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n    function simulate() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        for (const boid of boids) {\r\n            boid.flock(boids);\r\n            boid.update(canvas.width, canvas.height);\r\n            drawTrail(boid); // Dessiner la trajectoire\r\n            drawBoid(boid);\r\n        }\r\n        requestAnimationFrame(simulate);\r\n    }\r\n    simulate();\r\n}\r\nexport function addTracingToggle() {\r\n    const toggleButton = document.createElement('button');\r\n    toggleButton.textContent = 'Toggle Tracing';\r\n    toggleButton.style.position = 'absolute';\r\n    toggleButton.style.top = '10px';\r\n    toggleButton.style.right = '10px';\r\n    toggleButton.style.zIndex = '10';\r\n    toggleButton.addEventListener('click', () => {\r\n        tracingEnabled = !tracingEnabled;\r\n    });\r\n    document.body.appendChild(toggleButton);\r\n}\r\n"],"names":["boidParams","separationFactor","alignmentFactor","centeringFactor","Boid","constructor","x","y","this","position","velocity","Math","random","acceleration","trail","maxTrailLength","turnfactor","visualRange","protectedRange","maxspeed","minspeed","update","canvasWidth","canvasHeight","speed","sqrt","pow","push","length","shift","applyForce","force","draw","ctx","beginPath","arc","PI","fill","flock","boids","alignment","cohesion","separation","close","dx","dy","other","distance","xvel_avg","yvel_avg","neighboring_boids","xpos_avg","ypos_avg","canvas","document","createElement","width","window","innerWidth","height","innerHeight","body","appendChild","getContext","startSimulation","addTracingToggle","console","error","controlsContainer","createSlider","label","min","max","step","value","onChange","container","sliderLabel","slider","valueDisplay","textContent","type","String","concat","addEventListener","Number","style","top","left","backgroundColor","padding","border","zIndex","val","tracingEnabled","i","drawTrail","boid","start","end","moveTo","lineTo","strokeStyle","lineWidth","stroke","drawBoid","angle","atan2","save","translate","rotate","size","closePath","fillStyle","restore","simulate","clearRect","requestAnimationFrame","toggleButton","right"],"sourceRoot":""}